name: joyful_noise

on: 
  pull_request:

env:
  FAILED_STEP: ''

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      - uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.13.9'
          channel: 'stable'

      - name: Install Dependencies
        run: |
          echo "FAILED_STEP=Install Dependencies|flutter packages get" >> $GITHUB_ENV
          flutter packages get

      - name: Format
        run: |
          echo "FAILED_STEP=Format|dart format -l  120 lib test" >> $GITHUB_ENV
          dart format -l  120 --set-exit-if-changed lib test

      - name: Sort Imports
        run: |
          echo "FAILED_STEP=Sort Imports|flutter pub run import_sorter:main" >> $GITHUB_ENV
          flutter pub run import_sorter:main --exit-if-changed

      - name: Analyze
        run: |
          echo "FAILED_STEP=Analyze|flutter analyze lib test" >> $GITHUB_ENV
          flutter analyze lib test

      - name: Run unit tests
        run: |
          echo "FAILED_STEP=Run unit tests|flutter test --dart-define=CI=true --no-pub --coverage --test-randomize-ordering-seed random" >> $GITHUB_ENV
          flutter test --dart-define=CI=true --no-pub --coverage --test-randomize-ordering-seed random > test_results.txt || true

      - name: Extract failed tests
        run: |
          python3 extract_failed_tests.py || echo "" > failed_tests.txt

      - uses: codecov/codecov-action@v2
        with:
          files: coverage/lcov.info

      - name: Comment PR
        if: failure()
        uses: actions/github-script@v5
        with:
          script: |
            const fs = require('fs');
            const [step, command] = process.env.FAILED_STEP.split('|');
            const issue_number = context.issue.number;
            const failedTests = fs.readFileSync('failed_tests.txt', 'utf8');
            const message = `${step} stage failed. Please run the following command to fix the error: \`${command}\`. Check the logs and the failed tests below for more details:\n\`\`\`\n${failedTests}\n\`\`\``;
            github.rest.issues.createComment({
              issue_number: issue_number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: message
            });

  # id of job, a string that is unique to the "jobs" node above.
  # drive:
  #   # Creates a build matrix for your jobs. You can define different
  #   # variations of an environment to run each job in.
  #   strategy:
  #     # A set of different configurations of the virtual
  #     # environment.
  #     matrix:
  #       device:
  #       - "iPhone 8"
  #       - "iPhone 11 Pro Max"
  #     # When set to true, GitHub cancels all in-progress jobs if any
  #     # matrix job fails.
  #     fail-fast: false
  #   # The type of machine to run the job on.
  #   runs-on: macOS-latest
  #   # Contains a sequence of tasks.
  #   steps:
  #   # A name for your step to display on GitHub.
  #   - name: "List all simulators"
  #     run: "xcrun simctl list"
  #   - name: "Start Simulator"
  #     run: |
  #       UDID=$(
  #         xcrun simctl list | grep -i "${{ matrix.device }}" | grep -i "shutdown" | head -n 1 | awk -F"[()]" '{print $2}'
  #       )
  #       xcrun simctl boot "${UDID:?No Simulator with this name found}"
  #   # The branch or tag ref that triggered the workflow will be
  #   # checked out.
  #   # https://github.com/actions/checkout
  #   - uses: actions/checkout@v2
  #   # Sets up a flutter environment.
  #   # https://github.com/marketplace/actions/flutter-action
  #   - uses: subosito/flutter-action@v2
  #     with:
  #       channel: 'master' # or: 'stable', 'dev' or 'beta'
  #   - name: "Run Flutter Driver tests"
  #     run: "flutter test --flavor development -d iPhone integration_test"

